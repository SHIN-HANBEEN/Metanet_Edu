server.port=8084

spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=hr
spring.datasource.password=1004

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# com.example.demo \uC778\uD130\uD398\uC774\uC2A4\uAC00 \uC788\uB294 \uD328\uD0A4\uC9C0, \uC774 \uD328\uD0A4\uC9C0 \uC548\uC758 \uC778\uD130\uD398\uC774\uC2A4\uB294 @Repository, @Mapper\uAC00 \uC124\uC815\uB418\uC5B4 \uC788\uC5B4\uC57C \uD568
mybatis.type-aliases-package=com.example.myapp
# \uB9E4\uD37C XML \uD30C\uC77C\uC758 \uC704\uCE58\uB97C \uC9C0\uC815
mybatis.mapper-locations=classpath:mapper/**/*.xml
# basic location is WEB-INF/classes. We can use this with classpath:/ 
# so in this case, classpath:mapper/**/*.xml means that main/resources/mapper and under folders that match /**/*.xml

logging.level.root=info
logging.level.com.example.myapp=info


log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
log4jdbc.dump.sql.maxlinelength=0

#HikariCP 라는 라이브러리에서 로깅 레벨을 지정하는 것인데요. 
#OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE 레벨이 있습니다. 
logging.level.com.zaxxer.hikari=INFO
logging.level.javax.sql.DataSource=OFF

#SQL 및 DB 관련 이벤트 로깅 설정, 연결이 되었다면 OFF로 해놓습니다.
logging.level.jdbc.audit=OFF
#ResultSet 을 보여주는 설저잉므로, 마찬가지로 해결이 된다면 OFF로 해놓습니다.
logging.level.jdbc.resultset=OFF
logging.level.jdbc.resultsettable=INFO
#SQL 쿼리에 대한 로깅설정인데요. sqltiming이 DEBUG나 INFO 면 실행시간과 쿼리 텍스트 모두 출력해주기 때문에
#Sqlonly 설정은 해줄 피룡가 없습니다.
logging.level.jdbc.sqlonly=OFF
logging.level.jdbc.sqltiming=INFO
#Connection 생성 및 반환하는 정보를 보여주는 로그입니다.
logging.level.jdbc.connection=OFF 
