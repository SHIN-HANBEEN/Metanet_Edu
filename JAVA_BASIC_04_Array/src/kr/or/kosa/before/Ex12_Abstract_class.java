package kr.or.kosa.before;
/*
    추상 클래스는 무엇일까요?
    문법 적인 정의는 추상 메서드를 가진 클래스입니다.

    추상 클래스를 만든다는 것이 설계자에게 어떤 의미일까요??
    추상 클래스를 만들어서 주는 것은 '믿지 않으니까' 그렇게 주는 겁니다.

    추상 클래스는 완성된 코드와 완성되지 않은 코드를 같이 가지고 있는 클래스입니다.

    무슨 말이냐면, 일반 클래스를 상속받으면 오버라이드 하지 않아도 문제가 생기지 않는데요.
    추상 클래스를 상속 받은 클래스는 오버라이드(재정의)를 강제하는 방법입니다.

    추상 클래스보다 강제성이 더 큰 것은 인터페이스입니다.
    인터페이스의 디폴트와 스태틱이 있지만, 이것은 프로그램의 확장성을 위해서일 뿐입니다.

    추상 클래스를 그래서 '미완성 설계도'라고 부릅니다.

    그럼, 추상 클래스와 인터페이스의 차이점이 뭘까요?

    우선, 미완성 설계도이기 때문에, 상속을 해야지만 new 를 써서 사용할 수 있습니다.

    즉, 상속을 통해서만 재정의를 구현하여 사용하게 됩니다.

    "강제적 구현"을 목적으로 합니다.
 */
abstract class Abclass {
    int pos;
    void run() {
        pos++;
    }

    //강제하고 싶어요.  :  추상 자원으로 만들어요!
    abstract void stop(); //실행 블럭이 없어요... 반드시 상속을 통해서 구현 ! 즉, 재정의 무조건!
}
class Child extends Abclass {

    @Override
    void stop() {
        this.pos = 0;
        System.out.println("stop : " + this.pos);
    }
}
public class Ex12_Abstract_class {

}
